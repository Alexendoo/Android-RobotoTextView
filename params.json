{"name":"Android-RobotoTextView","tagline":"Implementation of a TextView and all its direct/indirect subclasses with native support for the Roboto fonts, includes the brand new Roboto Slab fonts.","body":"Android-RobotoTextView\r\n======================\r\n\r\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Android--RobotoTextView-brightgreen.svg?style=flat)](https://android-arsenal.com/details/1/471)\r\n\r\nImplementation of a [TextView][6] and all its direct/indirect subclasses with native support for the [Roboto][5] fonts, includes the brand new [Roboto Slab][3] and [Roboto Mono][4] fonts.\r\n\r\nSupported fonts:\r\n\r\n* [Roboto][1]\r\n* [Roboto Condensed][2]\r\n* [Roboto Slab][3]\r\n* [Roboto Mono][4]\r\n\r\n![image](https://raw.githubusercontent.com/johnkil/Android-RobotoTextView/master/art/RobotoTextView.jpg)\r\n\r\n<a href=\"http://play.google.com/store/apps/details?id=com.devspark.robototextview\">\r\n  <img alt=\"Get it on Google Play\"\r\n       src=\"http://www.android.com/images/brand/get_it_on_play_logo_small.png\" />\r\n</a>\r\n\r\n\r\nCompatibility\r\n-------------\r\n\r\nThis library is compatible from API 7 (Android 2.1).\r\n\r\n\r\nDownload\r\n--------\r\n\r\nGradle:\r\n\r\n```groovy\r\ncompile 'com.github.johnkil.android-robototextview:robototextview:2.5.0'\r\n```\r\n\r\nMaven:\r\n\r\n```xml\r\n<dependency>\r\n    <groupId>com.github.johnkil.android-robototextview</groupId>\r\n    <artifactId>robototextview</artifactId>\r\n    <version>2.5.0</version>\r\n    <type>aar</type>\r\n</dependency>\r\n```\r\n\r\n\r\nUsage\r\n-----\r\n\r\n#### In XML\r\n\r\nTo setup a typeface you must specify the parameter `typeface`:\r\n\r\n``` xml\r\n<com.devspark.robototextview.widget.RobotoTextView\r\n            xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n            xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:typeface=\"roboto_light_italic\"/>\r\n```\r\n\r\nor specify a set of parameters `fontFamily`, `textWeight` and `textStyle`:\r\n``` xml\r\n<com.devspark.robototextview.widget.RobotoTextView\r\n            xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n            xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:fontFamily=\"roboto\"\r\n            app:textWeight=\"light\"\r\n            app:textStyle=\"italic\"/>\r\n```\r\n\r\nSetup typeface in code:\r\n\r\n#### In Code\r\n\r\nUsing parameter `typeface`:\r\n``` java\r\nRobotoTextView textView = new RobotoTextView(context);\r\nTypeface typeface = RobotoTypefaceManager.obtainTypeface(\r\n        context, \r\n        RobotoTypefaceManager.Typeface.ROBOTO_LIGHT_ITALIC);\r\nRobotoTextViewUtils.setUp(textView, typeface);\r\n```\r\n\r\nUsing parameters `fontFamily`, `textWeight` and `textStyle`:\r\n``` java\r\nRobotoTextView textView = new RobotoTextView(context);\r\nTypeface typeface = RobotoTypefaceManager.obtainTypeface(\r\n        context, \r\n        RobotoTypefaceManager.FontFamily.ROBOTO,\r\n        RobotoTypefaceManager.TextWeight.LIGHT,\r\n        RobotoTypefaceManager.TextStyle.ITALIC);\r\nRobotoTextViewUtils.setUp(textView, typeface);\r\n```\r\n\r\n#### With Span\r\n\r\nUsing parameter `typeface`:\r\n``` java\r\nRobotoTypefaceSpan span = new RobotoTypefaceSpan(\r\n        context,\r\n        RobotoTypefaceManager.Typeface.ROBOTO_BOLD);\r\nSpannable spannable = new SpannableString(\"text\");\r\nspannable.setSpan(span, 0, 1, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n```\r\n\r\nUsing parameters `fontFamily`, `textWeight` and `textStyle`:\r\n``` java\r\nRobotoTypefaceSpan span = new RobotoTypefaceSpan(\r\n        context,\r\n        RobotoTypefaceManager.FontFamily.ROBOTO,\r\n        RobotoTypefaceManager.TextWeight.LIGHT,\r\n        RobotoTypefaceManager.TextStyle.ITALIC);\r\nSpannable spannable = new SpannableString(\"text\");\r\nspannable.setSpan(span, 0, 1, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n```\r\n\r\nGradle\r\n------\r\n\r\nIf you intend to use is not all fonts, the extra fonts can be removed.\r\n\r\n``` xml\r\nandroid.applicationVariants.all{ variant ->\r\n    variant.mergeAssets.doFirst {\r\n        File fonts = file(\"${projectDir}/build/intermediates/exploded-aar/com.github.johnkil.android-robototextview/robototextview/2.5.0/assets/fonts\")\r\n        if (fonts.exists()) {\r\n            for (File file : fonts.listFiles()) {\r\n                if (file.getName().contains(\"RobotoSlab\")) {\r\n                    println(\"delete \" + file.getName() + \" font\")\r\n                    file.delete()\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\nLicense\r\n-------\r\n\r\n    Copyright 2014 Evgeny Shishkin\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    \r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n    \r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n\r\n[1]: https://www.google.com/fonts/specimen/Roboto\r\n[2]: https://www.google.com/fonts/specimen/Roboto+Condensed\r\n[3]: https://www.google.com/fonts/specimen/Roboto+Slab\r\n[4]: https://www.google.com/fonts/specimen/Roboto+Mono\r\n[5]: http://www.google.com/design/spec/style/typography.html\r\n[6]: http://developer.android.com/reference/android/widget/TextView.html\r\n\r\n[0]: https://github.com/google/roboto","google":"UA-37227385-6","note":"Don't delete this file! It's used internally to help with page regeneration."}